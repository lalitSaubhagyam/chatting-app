<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Application</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f1f5f9;
            font-family: Arial, sans-serif;
        }
        .container {
            margin-top: 30px;
        }
        .card {
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .card-header {
            background-color: #007bff;
            color: #fff;
            font-weight: bold;
            border-bottom: 0;
        }
        .card-body {
            background-color: #fff;
            border-radius: 10px;
        }
        #messages {
            border: 1px solid #ddd;
            padding: 15px;
            height: 400px;
            overflow-y: auto;
            background-color: #f9f9f9;
            border-radius: 10px;
            box-shadow: inset 0 0 10px rgba(0,0,0,0.05);
        }
        #form {
            display: flex;
            margin-top: 10px;
            align-items: center;
            border-top: 1px solid #ddd;
            padding-top: 10px;
        }
        #input {
            flex: 1;
            padding: 10px;
            border-radius: 20px;
            border: 1px solid #ddd;
            box-shadow: inset 0 0 5px rgba(0,0,0,0.1);
        }
        .message {
            padding: 10px;
            border-radius: 12px;
            margin-bottom: 10px;
            display: flex;
            flex-direction: column;
            max-width: 70%;
        }
        .message.sender {
            background-color: #d4edda;
            align-self: flex-end;
        }
        .message.receiver {
            background-color: #f8d7da;
            align-self: flex-start;
        }
        .timestamp {
            font-size: 0.8em;
            color: gray;
            margin-top: 5px;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
            padding-top: 60px;
        }
        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .modal-header {
            border-bottom: 1px solid #ddd;
            padding-bottom: 10px;
        }
        .modal-header h2 {
            margin: 0;
        }
        .modal-body {
            max-height: 400px;
            overflow-y: auto;
        }
        .user-checkbox {
            margin: 5px 0;
        }
        .btn-primary {
            background-color: #007bff;
            border: none;
        }
        .btn-primary:hover {
            background-color: #0056b3;
        }
        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }
        .btn-secondary:hover {
            background-color: #5a6268;
        }
        .btn-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #000;
            cursor: pointer;
        }
        .btn-close:hover {
            color: #007bff;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-center mb-4">Welcome, <%= username %></h1>
        <div class="row">
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-users"></i> User List
                    </div>
                    <div class="card-body user-list">
                        <ul id="userList" class="list-unstyled">
                            <% users.forEach(user => { %>
                                <li><a href="#" class="start-chat" data-user-id="<%= user._id %>"><%= user.username %></a></li>
                            <% }) %>
                        </ul>
                    </div>
                </div>
                
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-users-cog"></i> Group List
                    </div>
                    <div class="card-body group-list">
                        <ul id="groupList" class="list-unstyled">
                            <% groups.forEach(group => { %>
                                <li><a href="#" class="start-group-chat" data-group-id="<%= group._id %>"><%= group.name %></a></li>
                            <% }) %>
                        </ul>
                    </div>
                </div>
                
                <!-- Create Group Modal -->
                <div id="createGroupModal" class="modal">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2>Create Group</h2>
                            <button class="btn-close">&times;</button>
                        </div>
                        <div class="modal-body">
                            <form id="createGroupForm">
                                <div class="form-group">
                                    <label for="groupName">Group Name:</label>
                                    <input type="text" id="groupName" class="form-control" required>
                                </div>
                                <div class="form-group">
                                    <label for="groupMembers">Select Members:</label>
                                    <div id="groupMembers" class="form-control" style="height: 150px; overflow-y: auto;">
                                        <% users.forEach(user => { %>
                                            <div class="user-checkbox">
                                                <input type="checkbox" id="user_<%= user._id %>" value="<%= user._id %>">
                                                <label for="user_<%= user._id %>"><%= user.username %></label>
                                            </div>
                                        <% }) %>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary">Create Group</button>
                                <p id="createGroupMessage" class="mt-3 text-danger"></p>
                            </form>
                        </div>
                    </div>
                </div>
                
                <button id="openCreateGroupModal" class="btn btn-secondary mt-3"><i class="fas fa-plus"></i> Create New Group</button>
            </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <i class="fas fa-comments"></i> Chat
                    </div>
                    <div id="messages" class="card-body mt-3"></div>
                    <div class="card-footer">
                        <form id="form">
                            <input id="input" autocomplete="off" class="form-control" placeholder="Type a message" />
                            <button class="btn btn-primary mt-2">Send</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const userList = document.getElementById('userList');
        const groupList = document.getElementById('groupList');
        const form = document.getElementById('form');
        const input = document.getElementById('input');
        const messages = document.getElementById('messages');
        let currentReceiverId = null;
        let currentGroupId = null;
        const userId = '<%= userId %>';

        // Join user-specific room
        socket.emit('join', userId);

        // Start chat with selected user
        userList.addEventListener('click', (e) => {
            if (e.target.classList.contains('start-chat')) {
                e.preventDefault();
                currentReceiverId = e.target.getAttribute('data-user-id');
                currentGroupId = null;
                fetch(`/messages/${currentReceiverId}`)
                    .then(response => response.json())
                    .then(data => {
                        messages.innerHTML = '';
                        data.forEach(msg => {
                            const item = document.createElement('div');
                            item.className = `message ${msg.sender._id === userId ? 'sender' : 'receiver'}`;
                            item.innerHTML = `<span>${msg.sender.username}: ${msg.content}</span><span class="timestamp">${new Date(msg.timestamp).toLocaleTimeString()}</span>`;
                            messages.appendChild(item);
                        });
                        messages.scrollTop = messages.scrollHeight;
                    });
            };
        });

        // Start chat with selected group
        groupList.addEventListener('click', (e) => {
            if (e.target.classList.contains('start-group-chat')) {
                e.preventDefault();
                currentGroupId = e.target.getAttribute('data-group-id');

                socket.emit('join group', currentGroupId, (error) => {
                    if (error) {
                        console.log('Error joining group');
                    }
                });

                currentReceiverId = null;
                fetch(`/group-messages/${currentGroupId}`)
                    .then(response => response.json())
                    .then(data => {
                        messages.innerHTML = '';
                        data.forEach(msg => {
                            const item = document.createElement('div');
                            item.className = `message ${msg.sender._id === userId ? 'sender' : 'receiver'}`;
                            item.innerHTML = `<span>${msg.sender.username}: ${msg.content}</span><span class="timestamp">${new Date(msg.timestamp).toLocaleTimeString()}</span>`;
                            messages.appendChild(item);
                        });
                        messages.scrollTop = messages.scrollHeight;
                    });
            };
        });

        form.addEventListener('submit', (e) => {
            e.preventDefault();
            if (input.value) {
                socket.emit('chat message', { content: input.value, receiverId: currentReceiverId, senderId: userId, groupId: currentGroupId });
                input.value = '';
            };
        });

        socket.on('chat message', (data) => {
            if (currentReceiverId || currentGroupId) {
                const item = document.createElement('div');
                item.className = `message ${data.senderId === userId ? 'sender' : 'receiver'}`;
                item.innerHTML = `<span>${data.senderName}: ${data.content}</span><span class="timestamp">${new Date(data.timestamp).toLocaleTimeString()}</span>`;
                messages.appendChild(item);
                messages.scrollTop = messages.scrollHeight;
            };
        });

        // Create Group Modal
        const createGroupModal = document.getElementById('createGroupModal');
        const openCreateGroupModal = document.getElementById('openCreateGroupModal');
        const closeCreateGroupModal = createGroupModal.querySelector('.btn-close');
        const createGroupForm = document.getElementById('createGroupForm');
        const createGroupMessage = document.getElementById('createGroupMessage');

        openCreateGroupModal.onclick = () => {
            createGroupModal.style.display = 'block';
        };

        closeCreateGroupModal.onclick = () => {
            createGroupModal.style.display = 'none';
        };

        window.onclick = (event) => {
            if (event.target === createGroupModal) {
                createGroupModal.style.display = 'none';
            };
        };

        createGroupForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const groupName = document.getElementById('groupName').value;
            const members = Array.from(document.querySelectorAll('#groupMembers input:checked')).map(cb => cb.value);

            try {
                const response = await fetch('/create-group', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name: groupName, members: [userId, ...members] }) // Include the creator and selected members
                });

                const result = await response.json();
                createGroupMessage.textContent = result.message;

                if (response.ok) {
                    createGroupForm.reset();
                    window.location.reload();
                }
            } catch (error) {
                createGroupMessage.textContent = 'Error: ' + error.message;
            }
        });
    </script>
</body>
</html>
